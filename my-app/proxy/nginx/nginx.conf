events { }

http {
    upstream backend_users {
        server users:3000;  # Backend users service accessible only via internal Docker network
    }

    server {
        listen 80;

        # Proxy for backend users routes
        location /users/create {
            proxy_pass http://backend_users/users/create;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /users/login {
            proxy_pass http://backend_users/users/login;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /users/profile {
            proxy_pass http://backend_users/users/profile;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /users/delete {
            proxy_pass http://backend_users/users/delete;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Default 404 for unmatched routes
        location / {
            return 404;
        }
    }
}
